{% extends "base.html.twig" %}

{# Import Macros #}
{% from '@SyliusResource/Macros/actions.html.twig' import create %}
{% import "@VSApplication/Macros/form.html.twig" as vs_form %}
{% import "@VSApplication/Macros/tree.html.twig" as vs_tree %}

{% if( item.id ) %}
    {% set pageTitle = 'vs_wgp.form.tablature_update.title' | trans( {},'WebGuitarPro' ) %}
{% else %}
    {% set pageTitle = 'vs_wgp.form.tablature_update.create_title' | trans( {},'WebGuitarPro' ) %}
{% endif %}

{% block title %}{{ parent() }} :: {{ pageTitle }}{% endblock %}
{% block pageTitle %}{{ pageTitle }}{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header align-items-center d-flex">
                    <h4 class="card-title mb-0 flex-grow-1">{{ 'vs_wgp.template.my_tablatures' | trans( {},'WebGuitarPro' ) }}</h4>
                </div><!-- end card header -->

                <div class="card-body">
                    {% if item.id %}{% set formMethod = 'PUT' %}{% else %}{% set formMethod = 'POST' %}{% endif %}
                    {{ form_start(form, { 'attr': {'class': 'form-horizontal ', 'id': 'tablature-form'}, 'method': formMethod }) }}
                        {% if form_errors(form) is not empty %}
                            <div class="alert alert-block alert-danger fade in">
                                <button type="button" class="close close-sm" data-bs-dismiss="alert">
                                    <i class="icon-remove"></i>
                                </button>
                                <strong>{{ 'vs_wgp.form.error_caption' | trans( {},'WebGuitarPro' ) }}</strong> {{ form_errors(form) }}
                            </div>
                        {% endif %}
                        
                        {# NEED TO BE CREATE A MACROS TO SHOW FORM ERRORS FROM AbstractCrudController #}
                        {% if formErrors is not empty %}
                            <!-- Danger Alert -->
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                {% for field, errors in formErrors %}
                                    {% for fieldError in errors %}
                                        <strong> Error in Field: '{{ field }}'! </strong> {{ fieldError }}
                                    {% endfor %}
                                {% endfor %}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endif %}
                        
                        {{ form_widget( form._currentUrl, {
                            'value': path( app.request.attributes.get( '_route' ), app.request.attributes.get( '_route_params' ) )} )
                        }}
                        
                        <div class="form-group">
                            <label class="custom-control custom-checkbox">
                                <input type="checkbox" id="tablature_form_enabled"
                                    class="custom-control-input"
                                    name="tablature_form[enabled]"
                                    value="{{ item.enabled }}"
                                    {% if item.enabled %}checked="checked"{% endif %}
                                />
                                <span class="custom-control-label">{{ form.enabled.vars.label | trans({}, 'WebGuitarPro') }}</span>
                            </label>
                        </div>
                        
                        <div class="form-group">
                            {{ form_label( form.category_taxon, null, {
                                'label_attr': {'class': 'col-form-label'}
                                }) 
                            }}
                            
                            {# Documentation: https://www.jeasyui.com/documentation/combotree.php #}
                            {% if item is defined and item.id %}{% set itemId = item.id %}{% else %}{% set itemId = 0 %}{% endif %}
                            {% set comboDataSourceUrl  = url('vs_wgp_tablature_categories_tree_combo_with_selected', {'categoriesTaxonomyId': tabCategoriesTaxonomyId, 'tabId': itemId}) %}
                            {% set comboTreePlaceholder = 'vs_cms.form.page.categories_placeholder' | trans( {},'VSCmsBundle' ) %}
                            {{ vs_tree.easyuiCombobox( form.category_taxon, comboDataSourceUrl, itemId,
                                {
                                    'required': 'true',
                                    'multiple': 'true',
                                    'checkbox': 'true',
                                    'cascadeCheck': 'false',
                                    'placeholder': comboTreePlaceholder
                                }
                            ) }}
                        </div>
                        
                        <div class="form-group">
                            {{ form_label( form.artist, null, {
                                'label_attr': {'class': 'col-form-label'}
                                }) 
                            }}
                            
                            {{ form_widget(form.artist, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        
                        <div class="form-group">
                            {{ form_label( form.song, null, {
                                'label_attr': {'class': 'col-form-label'}
                                }) 
                            }}
                            
                            {{ form_widget(form.song, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        
                        <div class="form-group">
                            {{ form_label(form.tablature, null, {
                                'label_attr': {'class': 'col-form-label'}
                                }) 
                            }}
                            <div class="input-group form-field-file">
                                {% if item.tablatureFile %}{% set originalName = item.tablatureFile.originalName %}{% else %}{% set originalName = '' %}{% endif %}
                                {{ form_widget(form.tablature, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': originalName,
                                        'accept': '.gp, .gp3, .gp4, .gp5'
                                    }
                                }) }}
                                <label class="input-group-text" for="tablature_form_tablature">{{ originalName }}</label>
                            </div>
                        </div>
                        
                        <div class="row">&nbsp;</div>
                        {{ vs_form.buttons( form ) }}
                        
                    {{ form_end(form, {'render_rest': false}) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block head_styles %}
    {{ parent() }}
    
    {{ encore_entry_link_tags( 'js/tablature-edit', null, 'WebGuitarPro_VelzonSaas' ) }}
{% endblock %}  

{% block javascripts %}
    {{ parent() }}
    
    {{ encore_entry_script_tags( 'js/tablature-edit', null, 'WebGuitarPro_VelzonSaas' ) }}
{% endblock %}
